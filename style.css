/* --- SnugOS Window Styling --- */
#desktop {
    width: 100vw;
    height: 100vh;
    overflow: hidden; /* To contain windows if they go off-screen */
    position: relative; /* Important for absolute positioning of windows within it */
    /* background-color is set by JS or can be defaulted here if needed */
}

.window {
    position: absolute; /* Positioned by JavaScript */
    border: 1px solid #000000; /* Black border to define the window edge */
    box-shadow: 2px 2px 5px rgba(0,0,0,0.5); /* Basic shadow for depth */
    background-color: #c0c0c0; /* Default background, can be overridden by JS */
    display: flex; /* Crucial for arranging title bar and content area */
    flex-direction: column; /* Stack title bar on top of content */
    overflow: hidden; /* Prevent content from spilling if not handled by .window-content */
    min-width: 150px; /* Prevent windows from becoming too small */
    min-height: 100px;
}

.window.minimized {
    display: none !important; /* Hide when minimized */
}

.window-title-bar {
    background-color: #000080; /* Classic dark blue for title bar */
    color: white;
    padding: 3px 5px;
    cursor: grab;
    display: flex;
    justify-content: space-between;
    align-items: center;
    height: 24px; /* Fixed height for the title bar */
    flex-shrink: 0; /* Prevent the title bar from shrinking */
    font-size: 0.8rem;
    font-weight: bold;
    user-select: none; /* Prevent text selection when dragging */
}

.window-title-bar span { /* For the title text itself */
    overflow: hidden;
    text-overflow: ellipsis;
    white-space: nowrap;
    padding-right: 5px; /* Space before buttons */
}

.window-title-buttons {
    display: flex;
}

.window-title-buttons button {
    background: #c0c0c0; /* Standard button grey */
    border: 1px solid black;
    border-color: #ffffff #808080 #808080 #ffffff; /* 3D border */
    box-shadow: 1px 1px 0 #ffffff inset, -1px -1px 0 #808080 inset;
    color: black;
    width: 18px;
    height: 18px;
    line-height: 16px; /* Adjust for visual centering */
    text-align: center;
    font-size: 10px;
    font-weight: bold;
    margin-left: 2px;
    padding: 0;
    cursor: default; /* Standard cursor for window buttons */
    flex-shrink: 0;
}

.window-title-buttons button:active {
    border-color: #808080 #ffffff #ffffff #808080; /* Inverted 3D border */
    box-shadow: -1px -1px 0 #ffffff inset, 1px 1px 0 #808080 inset;
}

.window-content {
    flex-grow: 1; /* Allow content area to fill remaining vertical space */
    padding: 8px; /* Padding inside the content area */
    background-color: var(--window-content-bg, #c0c0c0); /* Matches SnugWindow.js default */
    overflow: auto; /* Add scrollbars if content exceeds window size */
}


/* --- Taskbar Styling (Basic) --- */
#taskbar {
    position: fixed;
    bottom: 0;
    left: 0;
    width: 100%;
    height: 30px; 
    background-color: #c0c0c0; 
    border-top: 2px solid #ffffff; 
    z-index: 10000; 
    display: flex;
    align-items: center;
    padding: 0 5px;
    box-sizing: border-box;
}

#startButton {
    background-color: #c0c0c0;
    border: 1px solid black;
    border-color: #ffffff #808080 #808080 #ffffff; 
    box-shadow: 1px 1px 0 #ffffff inset, -1px -1px 0 #808080 inset;
    padding: 2px 8px;
    font-weight: bold;
    margin-right: 5px;
}
#startButton:active {
    border-color: #808080 #ffffff #ffffff #808080; 
    box-shadow: -1px -1px 0 #ffffff inset, 1px 1px 0 #808080 inset;
}

#taskbarButtons .taskbar-button {
    background-color: #c0c0c0;
    border: 1px solid black;
    border-color: #ffffff #808080 #808080 #ffffff;
    box-shadow: 1px 1px 0 #ffffff inset, -1px -1px 0 #808080 inset;
    padding: 2px 5px;
    margin: 0 2px;
    max-width: 150px;
    overflow: hidden;
    text-overflow: ellipsis;
    white-space: nowrap;
    font-size: 0.8rem;
    flex-shrink: 0; /* Prevent shrinking */
}
#taskbarButtons .taskbar-button.active,
#taskbarButtons .taskbar-button:active {
    border-color: #808080 #ffffff #ffffff #808080;
    box-shadow: -1px -1px 0 #ffffff inset, 1px 1px 0 #808080 inset;
    background-color: #b0b0b0; 
}
#taskbarButtons .taskbar-button.minimized-on-taskbar {
    background-color: #d0d0d0;
}


#taskbarTempoDisplay {
    margin-left: auto; 
    padding: 2px 8px;
    border: 1px solid #808080;
    border-top-color: #707070;
    border-left-color: #707070;
    box-shadow: inset 1px 1px #c0c0c0, inset -1px -1px #f0f0f0;
    font-size: 0.8rem;
    background-color: #c0c0c0;
    cursor: pointer;
}


/* --- Start Menu Styling (Basic) --- */
#startMenu {
    position: absolute;
    bottom: 30px; 
    left: 0;
    background: #c0c0c0;
    border: 1px solid black;
    border-color: #ffffff #808080 #808080 #ffffff; 
    box-shadow: 2px 2px 3px rgba(0,0,0,0.3);
    z-index: 10001; 
    padding: 2px;
    min-width: 180px;
}

#startMenu.hidden {
    display: none;
}

#startMenu ul {
    list-style: none;
    padding: 0;
    margin: 0;
}

#startMenu li {
    padding: 4px 20px 4px 8px; 
    cursor: pointer;
    font-size: 0.85rem;
    white-space: nowrap;
}

#startMenu li:hover, #startMenu li.disabled:hover {
    background: #000080; 
    color: white;
}

#startMenu li.disabled {
    color: #808080; 
    cursor: default;
}

#startMenu hr {
    border: none;
    border-top: 1px solid #808080;
    border-bottom: 1px solid #ffffff;
    margin: 2px 0;
}

/* --- General App Styles --- */
body {
    font-family: 'Inter', sans-serif; 
    font-size: 14px;
    margin: 0; 
    overflow: hidden; 
    /* Tailwind dark mode applies to html element, so we can use these vars */
    background-color: var(--desktop-bg, #FFB6C1); /* Default light pink if not overridden by JS */
    color: var(--text-color, #000000);
}

.dark body { /* Example if you want to set body defaults for dark mode here too */
    background-color: var(--desktop-bg-dark, #1e293b); /* Example dark desktop */
    color: var(--text-color-dark, #e2e8f0);
}


/* --- Pad Button Styling --- */
.pad-button {
    padding: 8px;
    border: 1px solid #888; 
    background-color: #d4d0c8; 
    color: #000;
    cursor: pointer;
    text-align: center;
    min-width: 70px; 
    min-height: 70px;
    display: flex;
    flex-direction: column;
    align-items: center;
    justify-content: center;
    box-shadow: inset -1px -1px 0px #707070, inset 1px 1px 0px #ffffff; 
    transition: background-color 0.15s ease, box-shadow 0.15s ease;
    overflow: hidden; 
    position: relative; 
}

.pad-button:hover {
    background-color: #e0e0e0; 
}

.pad-button:active, .pad-button.selected-for-edit {
    background-color: #c0c0c0; 
    box-shadow: inset 1px 1px 0px #707070, inset -1px -1px 0px #ffffff; 
    border-color: #555;
}

.pad-button.selected-for-edit {
    border-color: #000080; 
    border-width: 2px;
    padding: 7px; 
}

.pad-label {
    font-size: 0.65rem; 
    color: #333;
    display: block;
    margin-top: 5px;
    word-break: break-all; 
    line-height: 1.2;
    max-height: 2.4em; 
    overflow: hidden;
    text-overflow: ellipsis;
}

.drop-zone-pad {
    border-style: solid; 
}

.drop-zone-pad.dragover {
    background-color: #b0c4de; 
    border-color: #4682b4;   
    border-style: dashed;
    opacity: 0.9;
    box-shadow: 0 0 8px rgba(70, 130, 180, 0.5); 
}

/* --- General Drop Zone Styling --- */
.drop-zone {
    border: 2px dashed #a0a0a0; 
    padding: 10px;  /* Adjusted from 20px to be less tall */            
    text-align: center;
    background-color: #f0f0f0;  
    color: #555;                
    font-size: 0.8em; /* Slightly smaller font */
    border-radius: 4px;         
    margin-bottom: 5px; /* Reduced margin */       
    transition: background-color 0.2s ease, border-color 0.2s ease;
}

.drop-zone.dragover {
    background-color: #d8e8ff; 
    border-color: #77aaff;     
    color: #333;
}

.drop-zone label {
    color: #007bff;             
    text-decoration: underline;
    cursor: pointer;
}

.drop-zone label:hover {
    color: #0056b3;             
}


.pads-container {
    display: grid;
    grid-template-columns: repeat(auto-fill, minmax(70px, 1fr));
    gap: 10px; 
    padding: 5px 0; 
}

#notification-area {
    position: fixed;
    bottom: 40px; 
    right: 20px;
    z-index: 20000; 
    display: flex;
    flex-direction: column;
    align-items: flex-end; 
}

.notification-message {
    background-color: rgba(0, 0, 0, 0.75);
    color: white;
    padding: 10px 15px;
    margin-top: 10px;
    border-radius: 4px;
    font-size: 0.9em;
    opacity: 0;
    transform: translateX(100%); 
    transition: opacity 0.3s ease, transform 0.3s ease;
    box-shadow: 0 2px 5px rgba(0,0,0,0.2);
}

.notification-message.show {
    opacity: 1;
    transform: translateX(0); 
}

.knob-container {
    display: flex;
    flex-direction: column;
    align-items: center;
    margin: 2px; /* Reduced margin */
    min-width: 50px; /* Slightly smaller min-width */
}

.knob-label {
    font-size: 0.65rem; /* Smaller label */
    color: #333;
    /* dark:color-slate-300 if using Tailwind for dark mode directly */
    margin-bottom: 1px;
    white-space: nowrap;
    overflow: hidden;
    text-overflow: ellipsis;
    max-width: 100%;
    text-align: center;
}
.dark .knob-label { color: #cbd5e1; }


.knob {
    width: 32px; 
    height: 32px;
    background-color: #B0B0B0; 
    border-radius: 50%;
    position: relative;
    border: 1px solid #707070;
    box-shadow: 0 1px 2px rgba(0,0,0,0.2), inset 0 1px 0 rgba(255,255,255,0.3);
    cursor: ns-resize; 
}
.dark .knob {
    background-color: #4a5568; /* Darker knob body */
    border-color: #2d3748;
}


.knob-handle {
    width: 3px; /* Thinner handle */
    height: 9px; 
    background-color: #333;
    position: absolute;
    top: 2px; 
    left: 50%;
    transform: translateX(-50%); 
    transform-origin: bottom center; 
    border-radius: 1.5px;
}
.dark .knob-handle { background-color: #e2e8f0; }


.knob-value {
    font-size: 0.6rem; /* Smaller value */
    color: #333;
    /* dark:color-slate-300 */
    margin-top: 1px;
    min-height: 1em; 
    text-align: center;
}
.dark .knob-value { color: #a0aec0; }

.control-group {
    display: flex;
    flex-wrap: wrap; 
    justify-content: space-around; 
    align-items: flex-end; 
    padding: 2px 0; /* Reduced padding */
    gap: 2px; 
}

.single-control-container {
    padding: 2px; /* Reduced padding */
    display: flex;
    justify-content: center;
}


/* --- General Button Active States --- */
.mute-button.muted, button.muted { /* ... unchanged ... */ }
.solo-button.soloed, button.soloed { /* ... unchanged ... */ }
.arm-input-button.armed, button.armed { /* ... unchanged ... */ }
.slice-toggle-button.active { /* ... unchanged ... */ }


/* --- NEW SEQUENCER GRID STYLING --- */
.sequencer-container {
    /* overflow: auto; already set in JS-generated div */
    /* dark:bg-slate-900 dark:text-slate-300; set in JS */
}

.sequencer-container .controls { /* The top bar with track name and bars input */
    /* sticky top-0 left-0 bg-gray-200 dark:bg-slate-800 p-1 z-30 border-b dark:border-slate-700; set by JS */
    /* These are Tailwind classes, ensure they apply or define equivalent CSS */
    /* Example non-Tailwind for sticky header: */
    position: sticky;
    top: 0;
    left: 0; /* If the overall container scrolls, this needs to stick relative to that */
    background-color: #e2e8f0; /* Light grey */
    z-index: 30; /* Highest */
    border-bottom: 1px solid #cbd5e0;
    padding: 0.25rem; /* Tailwind p-1 */
}
.dark .sequencer-container .controls {
    background-color: #1e293b; /* slate-800 */
    border-bottom-color: #334155; /* slate-700 */
}


.sequencer-grid-layout {
    /* display: grid; grid-template-columns: ...; grid-auto-rows: ...; gap: ...; width: fit-content; position: relative; top: 0; left: 0; set by JS */
    /* Any additional overall grid container styles if needed */
    background-color: #e5e7eb; /* A very light grey for the grid background itself */
}
.dark .sequencer-grid-layout {
    background-color: #0f172a; /* slate-900 or similar for dark grid background */
}


/* Common styles for all cells in the new grid */
.sequencer-grid-layout > div {
    box-sizing: border-box;
    display: flex;
    align-items: center;
    justify-content: center;
    overflow: hidden;
    text-overflow: ellipsis;
    white-space: nowrap;
    font-size: 0.65rem; /* Smaller text for labels/headers */
    /* Default border for all grid cells, individual cells can override/add specific borders */
    border: 1px solid #d1d5db; /* Tailwind gray-300 */
}
.dark .sequencer-grid-layout > div {
    border-color: #4b5563; /* Tailwind gray-600 */
}

/* Header cells (top-left empty & step numbers) */
.sequencer-grid-layout .sequencer-header-cell {
    /* sticky top-0 z-10/z-20 bg-gray-200 dark:bg-slate-800; set by JS */
    /* These are Tailwind classes, ensure they apply or define equivalent CSS */
    /* Example non-Tailwind: */
    position: sticky;
    top: 0;
    background-color: #e5e7eb; /* Tailwind gray-200 */
    font-weight: 500;
    color: #4b5563; /* Tailwind gray-600 */
    z-index: 20; /* Above step cells, below controls bar */
}
.dark .sequencer-grid-layout .sequencer-header-cell {
    background-color: #1f2937; /* Tailwind slate-800 */
    color: #9ca3af; /* Tailwind slate-400 */
}
.sequencer-grid-layout .sequencer-header-cell:first-child { /* Top-left empty cell */
    z-index: 25; /* Above other headers/labels if they overlap */
    left: 0; /* Also sticky left */
}


/* Row Label Cells */
.sequencer-grid-layout .sequencer-label-cell {
    /* sticky left-0 z-10 bg-gray-200 dark:bg-slate-800; set by JS */
    /* These are Tailwind classes, ensure they apply or define equivalent CSS */
    /* Example non-Tailwind: */
    position: sticky;
    left: 0;
    background-color: #e5e7eb; /* Tailwind gray-200 */
    justify-content: flex-end;
    padding-right: 0.25rem; /* Tailwind pr-1 */
    font-weight: 500;
    color: #4b5563; /* Tailwind gray-600 */
    z-index: 10; /* Above step cells */
}
.dark .sequencer-grid-layout .sequencer-label-cell {
    background-color: #1f2937; /* Tailwind slate-800 */
    color: #9ca3af; /* Tailwind slate-400 */
}

/* Step Cells */
.sequencer-grid-layout .sequencer-step-cell {
    cursor: pointer;
    transition: background-color 0.1s ease;
    /* Base background colors are set by beatBlockClass in JS via Tailwind */
}
/* Ensure beatBlockClass background colors take precedence if needed */
.sequencer-step-cell.bg-gray-50 { background-color: #f9fafb; }
.dark .sequencer-step-cell.dark\\:bg-slate-700 { background-color: #334155; }
.sequencer-step-cell.bg-white { background-color: #ffffff; }
.dark .sequencer-step-cell.dark\\:bg-slate-750 { background-color: #293548; } /* Custom slate-750 */


.sequencer-step-cell:hover {
    background-color: #dbeafe !important; /* Tailwind blue-100 */
}
.dark .sequencer-step-cell:hover {
    background-color: #1e40af !important; /* Tailwind blue-700 */
}

/* Active step colors */
.sequencer-step-cell.active-synth { background-color: #60a5fa !important; } /* blue-400 */
.sequencer-step-cell.active-sampler { background-color: #34d399 !important; } /* green-400 */
.sequencer-step-cell.active-drum-sampler { background-color: #facc15 !important; } /* yellow-400 */
.sequencer-step-cell.active-instrument-sampler { background-color: #f472b6 !important; } /* pink-400 */
.dark .sequencer-step-cell.active-synth { background-color: #3b82f6 !important; } /* blue-500 */
.dark .sequencer-step-cell.active-sampler { background-color: #10b981 !important; } /* green-500 */
.dark .sequencer-step-cell.active-drum-sampler { background-color: #eab308 !important; } /* yellow-500 */
.dark .sequencer-step-cell.active-instrument-sampler { background-color: #ec4899 !important; } /* pink-500 */


.sequencer-step-cell.playing {
    outline: 2px solid #ef4444; /* red-500 */
    outline-offset: -2px;
    z-index: 5; 
}

/* Styling for bar/beat lines (applied via JS with Tailwind border classes) */
/* Example: .border-l-2 .border-l-gray-400 .dark:border-l-slate-600 */
/* Tailwind handles these, but you can add fallbacks or overrides here if needed */


/* --- OLD SEQUENCER STYLES (Comment out or remove) ---
.sequencer-window-content { ... }
.sequencer-grid-container { ... }
.sequencer-grid { ... }
.sequencer-header-cell (old version) { ... }
.sequencer-label-cell (old version) { ... }
.sequencer-step-cell (old version) { ... }
--- END OLD SEQUENCER STYLES --- */


/* --- Panel and Control Group --- */
.panel { /* ... unchanged ... */ }
/* ... rest of your CSS ... */

.waveform-canvas { /* ... unchanged ... */ }
.meter-bar-container { /* ... unchanged ... */ }
.meter-bar { /* ... unchanged ... */ }
.meter-bar.clipping { /* ... unchanged ... */ }
.track-meter-container { /* ... unchanged ... */ }
.mixer-meter-container { /* ... unchanged ... */ }
#masterMeterContainerGlobal, #mixerMasterMeterContainer { /* ... unchanged ... */ }
.modal-overlay { /* ... unchanged ... */ }
.modal-dialog { /* ... unchanged ... */ }
.modal-title-bar { /* ... unchanged ... */ }
.modal-content { /* ... unchanged ... */ }
.modal-buttons { /* ... unchanged ... */ }
.modal-buttons button { /* ... unchanged ... */ }
.modal-buttons button:active { /* ... unchanged ... */ }
.window-resizer { /* ... unchanged ... */ }
.modular-effects-rack { /* ... unchanged ... */ }
.effects-list-container { /* ... unchanged ... */ }
.effect-controls-panel { /* ... unchanged ... */ }
.effect-item.dragging { /* ... unchanged ... */ }
.effect-item.dragover-target { /* ... unchanged ... */ }
.drop-zone-relink-container { /* ... unchanged ... */ }
.drop-zone-relink-button { /* ... unchanged ... */ }
.drop-zone-missing { /* ... unchanged ... */ }
.drop-zone-error { /* ... unchanged ... */ }
.drop-zone-loading { /* ... unchanged ... */ }
#midiIndicatorGlobal, #keyboardIndicatorGlobal { /* ... unchanged ... */ }
#midiIndicatorGlobal.active, #keyboardIndicatorGlobal.active { /* ... unchanged ... */ }
.global-controls-window .flex { /* ... unchanged ... */ }
.global-controls-window label { /* ... unchanged ... */ }
.window-content select, .modal-content select { /* ... unchanged ... */ }
.window-content input[type="text"], .window-content input[type="number"],
.modal-content input[type="text"], .modal-content input[type="number"] { /* ... unchanged ... */ }

